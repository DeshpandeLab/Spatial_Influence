dplyr::summarise(mean_value = mean(value), .groups = "drop") %>%
dplyr::filter(ref != influence) %>%
dplyr::group_by(Site, influence)%>%
dplyr::mutate(scaled = as.numeric(scale(mean_value)))%>%
ungroup()
df_cci_summary$ref<- factor(df_cci_summary$ref, levels=rev(clusterlevels))
df_cci_summary$influence<- factor(df_cci_summary$influence, levels=clusterlevels)
df_cci_summary$Site<- factor(df_cci_summary$Site, levels=sitelevels)
df_cci_summary<- df_cci_summary%>%
dplyr::filter(mean_value>0.01) # removing pairwise interaction mean_value < 0.01
## filter
pdf('./output/FigureS2A.pdf', height=8, width=12)
p2_1<-ggplot(df_cci_summary, aes(x=influence, y=ref)) +
geom_point(pch = 21, stroke = 0.5, col="grey", aes(size = mean_value, fill = scaled)) +
theme_classic() +
ylab("") +
xlab("")+
theme(axis.line = element_blank(),
axis.text= element_text(colour ="black", size = 12),
panel.border = element_rect(colour = "black", fill = NA, size = 1),
panel.grid.major = element_line(size = 0.5, linetype = 'solid'),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid'),
legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
legend.key.size = unit(0.3, "cm"),
legend.position="left") +
#scale_color_discrete("grey")+
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0,
name="Scale Relative to\nreceiving celltypes\n(scaled down\nthe column)")+
scale_y_discrete(position = "right") +
scale_x_discrete(
guide = guide_axis(angle = 45),position = "top") +
scale_size_continuous(breaks = seq(0, max(df_cci_summary$mean_value), by = 0.1))+
facet_wrap(~Site)
print(p2_1)
dev.off()
# overall CD8T+ TME comparsion between Pancreas and Liver (radial plot)
# Define the index
idx <- list(
which(df_output$cluster == "CD8T" & df_output$sample_id != 43),
which(df_output$cluster == "Tumor" & df_output$sample_id != 43)
)
# sample info dataframe
unique_id <- unique(df_output$sample_ids)
sampInfo <- data.frame(sample_id = unique_id)
sampInfo$Site <- as.factor(df_output$Site[match(sampInfo$sample_id, df_output$sample_id)])
sampInfo$Patient <- as.factor(df_output$Patient[match(sampInfo$sample_id, df_output$sample_id)])
majorCelltypes <- list(c("CD8T", "CD4T", "Treg", "M_I", "M_II", "Neutrophil", "Str_I", "Str_II", "Tumor"),
c("CD8T","CD4T","Treg","NK","M_I", "M_II", "Neutrophil", "Str_I", "Str_II", "UA"))
cellTypes<- c("CD8T", "Tumor")
tme_colors <- c(
"#1f77b4",  # CD8T
"#ff7f0e",  # CD4T
"#ff9f0e",  # Treg
"#FEE480",  # NK
"#2ca02c",  # M_I
"#d62728",  # M_II
"#9C4DF5",  # Neutrophil
"#BBE5E9",  # Str_I
"#0099B5",  # Str_II
"#d3d3d3",  # Tumor
"#5c6068"   # UA
)
names(tme_colors) <- c("CD8T", "CD4T","Treg","NK", "M_I", "M_II", "Neutrophil", "Str_I", "Str_II", "Tumor", "UA")
### TME comparison between Pancreas and Liver (CD8T and Tumor)
cell_types <- c("Tumor", "CD8T")
all_results <- list()
for (cell_type in cell_types) {
idx <- which(df_output$cluster == cell_type &
df_output$sample_id != 43)
# Subset data
spatwt_df <- spatwt[idx, ]
spatwt_df$Site <- factor(df_output$Site[match(spatwt_df$sample_id, df_output$sample_id)], levels = sitelevels)
spatwt_df$Patient <- factor(df_output$Patient[match(spatwt_df$sample_id, df_output$sample_id)], levels = unique(df_output$Patient))
# Filter data
filtered_df <- spatwt_df[, clusterlevels]
# Identify pancreas and liver indices
PanIdx <- which(spatwt_df$Site == "Pancreas")
LivIdx <- which(spatwt_df$Site == "Liver")
# Initialize results dataframe
results <- data.frame(CellType = character(),
PValue = numeric(),
AdjustedPValue = numeric(),
MeanPancreas = numeric(),
MeanLiver = numeric(),
log2FC = numeric())
for (cell in clusterlevels) {
pancreas_vals <- filtered_df[PanIdx, cell]
liver_vals <- filtered_df[LivIdx, cell]
# Run Wilcoxon test
test_result <- wilcox.test(pancreas_vals, liver_vals, exact = FALSE)
# Calculate means
mean_pancreas <- mean(pancreas_vals, na.rm = TRUE)
mean_liver <- mean(liver_vals, na.rm = TRUE)
log2fc <- log2(mean_liver / mean_pancreas)
results <- rbind(results, data.frame(CellType = cell,
PValue = test_result$p.value,
AdjustedPValue = NA,
MeanPancreas = mean_pancreas,
MeanLiver = mean_liver,
log2FC = log2fc))
}
# Adjust p-values using Bonferroni correction
results$AdjustedPValue <- p.adjust(results$PValue, method = "bonferroni")
results$logP <- -log10(results$AdjustedPValue)
# Replace Inf with maximum finite value
results$logP[is.infinite(results$logP)] <- max(results$logP[!is.infinite(results$logP)], na.rm = TRUE)
all_results[[cell_type]] <- results
pdf(paste0('./output/FigureS2B_', cell_type, '.pdf'), height = 5, width = 5)
pS2B<- ggplot(results, aes(CellType, log2FC, fill = logP)) +
geom_bar(width = 1, stat = "identity", color = "black") +
scale_y_continuous(breaks = scales::breaks_width(1)) +
scale_fill_gradient(low = "yellow", high = "red", name = "-log10(adj.pvalue)") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 8),
axis.text = element_blank(),
axis.title = element_blank(),
axis.line = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm")
) +
coord_polar()
print(pS2B)
dev.off()
}
pdf('./output/FigureS3E.pdf', height=5, width=9)
pS3E<- ggplot(summary_df_line, aes(x = type, y = median_value, color = Site, group = Site)) +
geom_line(size = 1) +  # Line for the mean value
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, fill = Site), alpha = 0.2, color = NA) +
facet_wrap(~ variable, scales = "free_y", ncol=2) +  # Facet by Marker
theme_minimal() +
labs(
x = "TME",
y = "Scaled Expression",
color = "Site",
fill = "Site"
) +
theme(
legend.position = "right",
strip.text = element_text(size = 14),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12)
)+
geom_hline(data= summary_df_line,
aes(yintercept=baselevel, color=Site),
linetype="dashed")
print(pS3E)
dev.off()
pdf('./output/FigureS3E.pdf', height=5, width=9)
pS3E<- ggplot(summary_df_line, aes(x = type, y = median_value, color = Site, group = Site)) +
geom_line(size = 1) +  # Line for the mean value
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, fill = Site), alpha = 0.2, color = NA) +
facet_wrap(~ variable, scales = "free_y", ncol=2) +  # Facet by Marker
theme_minimal() +
labs(
x = "TME",
y = "Scaled Expression",
color = "Site",
fill = "Site"
) +
theme(
legend.position = "right",
strip.text = element_text(size = 14),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle=45,  hjust =1),
axis.title = element_text(size = 12)
)+
geom_hline(data= summary_df_line,
aes(yintercept=baselevel, color=Site),
linetype="dashed")
print(pS3E)
dev.off()
pdf('./output/FigureS3E.pdf', height=8, width=5)
pS3E<- ggplot(summary_df_line, aes(x = type, y = median_value, color = Site, group = Site)) +
geom_line(size = 1) +  # Line for the mean value
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, fill = Site), alpha = 0.2, color = NA) +
facet_wrap(~ variable, scales = "free_y", ncol=2) +  # Facet by Marker
theme_minimal() +
labs(
x = "TME",
y = "Scaled Expression",
color = "Site",
fill = "Site"
) +
theme(
legend.position = "right",
strip.text = element_text(size = 14),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle=45,  hjust =1),
axis.title = element_text(size = 12)
)+
geom_hline(data= summary_df_line,
aes(yintercept=baselevel, color=Site),
linetype="dashed")
print(pS3E)
dev.off()
pdf('./output/FigureS3E.pdf', height=8, width=5)
pS3E<- ggplot(summary_df_line, aes(x = type, y = median_value, color = Site, group = Site)) +
geom_line(size = 1) +  # Line for the mean value
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, fill = Site), alpha = 0.2, color = NA) +
facet_wrap(~ variable, scales = "free_y", ncol=2) +  # Facet by Marker
theme_minimal() +
labs(
x = "TME",
y = "Scaled Expression",
color = "Site",
fill = "Site"
) +
theme(
legend.position = "none",
strip.text = element_text(size = 14),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle=45,  hjust =1),
axis.title = element_text(size = 12)
)+
geom_hline(data= summary_df_line,
aes(yintercept=baselevel, color=Site),
linetype="dashed")
print(pS3E)
dev.off()
pdf('./output/FigureS3E.pdf', height=8, width=5.5)
pS3E<- ggplot(summary_df_line, aes(x = type, y = median_value, color = Site, group = Site)) +
geom_line(size = 1) +  # Line for the mean value
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, fill = Site), alpha = 0.2, color = NA) +
facet_wrap(~ variable, scales = "free_y", ncol=2) +  # Facet by Marker
theme_minimal() +
labs(
x = "TME",
y = "Scaled Expression",
color = "Site",
fill = "Site"
) +
theme(
legend.position = "none",
strip.text = element_text(size = 14),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle=45,  hjust =1),
axis.title = element_text(size = 12)
)+
geom_hline(data= summary_df_line,
aes(yintercept=baselevel, color=Site),
linetype="dashed")
print(pS3E)
dev.off()
pdf('./output/FigureS3E.pdf', height=8, width=6)
pS3E<- ggplot(summary_df_line, aes(x = type, y = median_value, color = Site, group = Site)) +
geom_line(size = 1) +  # Line for the mean value
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, fill = Site), alpha = 0.2, color = NA) +
facet_wrap(~ variable, scales = "free_y", ncol=2) +  # Facet by Marker
theme_minimal() +
labs(
x = "TME",
y = "Scaled Expression",
color = "Site",
fill = "Site"
) +
theme(
legend.position = "none",
strip.text = element_text(size = 14),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle=45,  hjust =1),
axis.title = element_text(size = 12)
)+
geom_hline(data= summary_df_line,
aes(yintercept=baselevel, color=Site),
linetype="dashed")
print(pS3E)
dev.off()
tum_markers<- c("CK", "CD86", "VISTA", "KI67", "PDL1")
summary_df_line$type <- as.character(summary_df_line$type)
summary_df_line$type <- ifelse(summary_df_line$type != "BK",
paste0("CN", summary_df_line$type),
summary_df_line$type)
summary_df_line$type<- factor(summary_df_line$type,
levels=c("BK", paste0("CN", c(2,1,3,4,7,8, 9, 10, 5, 12,6, 11))))
summary_df_line$variable<- factor(summary_df_line$variable, levels=tum_markers)
pdf('./output/FigureS3E.pdf', height=7, width=6)
pS3E<- ggplot(summary_df_line, aes(x = type, y = median_value, color = Site, group = Site)) +
geom_line(size = 1) +  # Line for the mean value
geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, fill = Site), alpha = 0.2, color = NA) +
facet_wrap(~ variable, scales = "free_y", ncol=2) +  # Facet by Marker
theme_minimal() +
labs(
x = "TME",
y = "Scaled Expression",
color = "Site",
fill = "Site"
) +
theme(
legend.position = "none",
strip.text = element_text(size = 14),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle=45,  hjust =1),
axis.title = element_text(size = 12)
)+
geom_hline(data= summary_df_line,
aes(yintercept=baselevel, color=Site),
linetype="dashed")
print(pS3E)
dev.off()
source("~/Library/CloudStorage/OneDrive-JohnsHopkins/Spatial_Influence/codes/Figure4.R")
pdf('./output/Figure5B.pdf', height=6, width=3)
p5B<-ggplot(dd[dd$sample_id%in%c("18", "25"),], aes(x=X_position, y=Y_position, color=type))+
geom_point(size = 0.5)+
scale_color_manual(values = c("BD" = "black", "BK" = "#DF536C")) +
theme_void() +
scale_y_reverse()+
theme(legend.position = "none",)+
facet_wrap(~sample_id, ncol=1)
print(p5B)
dev.off()
source('./codes/functions/plot_marker_level.R')
plot_marker_level(coord_data = df_output[index, ],
expression_data= new_expr[index, ],
uniqID = select_sampID,
marker ="CK",
filenameprefix="Tumor_CK",
height_size = 5,
width_size = 18,
ncols=4)
source('./codes/functions/plot_marker_level.R')
plot_marker_level(coord_data = df_output[index, ],
expression_data= new_expr[index, ],
uniqID = select_sampID,
marker ="CK",
filenameprefix="Tumor_CK",
height_size = 5,
width_size = 18,
ncols=4)
plot_marker_level <- function(coord_data = coord,
expression_data= new_expr,
uniqID = unique_sampleID,
marker ="PDL1",
filenameprefix="Tumor_PDL1",
height_size = 5,
width_size =18,
ncols=5) {
require(ggplot2); require(dplyr); require(pheatmap); require(scales);
data<- cbind(coord_data, expression_data[, marker])
colnames(data)[length(data)]<-marker # name the last column (added from expr data) -> marker name
data_filtered <- data[data$sample_id%in% uniqID, ]
pdf(paste0('./output/', filenameprefix, '_level.pdf'), height=height_size, width=width_size)
p1<-ggplot(data_filtered,aes(x=X_position, y=Y_position, color=get(marker))) +
geom_point(size=set_size) +
scale_color_distiller(palette = "Spectral", direction = -1)+
theme_minimal()+
theme(
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
)+
facet_wrap(~sample_id, ncol=ncols)+
labs(color = marker)
print(p1)
dev.off()
data_filtered <- data_filtered %>%
group_by(sample_id) %>%
mutate(scaled = scales::rescale(get(marker), to = c(0, 1))) %>% # Scale to 0-1 within each group
ungroup()
pdf(paste0('./output/', filenameprefix, '_scaled.pdf'), height=height_size, width=width_size)
p2<- ggplot(data_filtered,aes(x=X_position, y=Y_position, color=scaled)) +
geom_point(size=set_size) +
scale_color_distiller(palette = "Spectral", direction = -1)+
theme_minimal()+
theme(
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
)+
facet_wrap(~sample_id, , ncol=ncols)+
labs(color = paste(marker, "scaled"))
print(p2)
dev.off()
}
plot_marker_level(coord_data = df_output[index, ],
expression_data= new_expr[index, ],
uniqID = select_sampID,
marker ="CK",
filenameprefix="Tumor_CK",
height_size = 5,
width_size = 18,
ncols=4)
plot_marker_level <- function(coord_data = coord,
expression_data= new_expr,
uniqID = unique_sampleID,
marker ="PDL1",
filenameprefix="Tumor_PDL1",
height_size = 5,
width_size =18,
ncols=5) {
require(ggplot2); require(dplyr); require(pheatmap); require(scales);
data<- cbind(coord_data, expression_data[, marker])
colnames(data)[length(data)]<-marker # name the last column (added from expr data) -> marker name
data_filtered <- data[data$sample_id%in% uniqID, ]
pdf(paste0('./output/', filenameprefix, '_level.pdf'), height=height_size, width=width_size)
p1<-ggplot(data_filtered,aes(x=X_position, y=Y_position, color=get(marker))) +
geom_point(size=0.5) +
scale_color_distiller(palette = "Spectral", direction = -1)+
theme_minimal()+
theme(
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
)+
scale_y_reverse()+
facet_wrap(~sample_id, ncol=ncols)+
labs(color = marker)
print(p1)
dev.off()
data <- data %>%
group_by(sample_id) %>%
mutate(scaled = scales::rescale(get(marker), to = c(0, 1))) %>% # Scale to 0-1 within each group
ungroup()
pdf(paste0('./output/', filenameprefix, '_scaled.pdf'), height=height_size, width=width_size)
p2<- ggplot(data_filtered,aes(x=X_position, y=Y_position, color=scaled)) +
geom_point(size=0.5) +
scale_color_distiller(palette = "Spectral", direction = -1)+
theme_minimal()+
theme(
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
)+
facet_wrap(~sample_id, , ncol=ncols)+
labs(color = paste(marker, "scaled"))
print(p2)
dev.off()
}
plot_marker_level(coord_data = df_output[index, ],
expression_data= new_expr[index, ],
uniqID = select_sampID,
marker ="CK",
filenameprefix="Tumor_CK",
height_size = 5,
width_size = 18,
ncols=4)
plot_marker_level <- function(coord_data = coord,
expression_data= new_expr,
uniqID = unique_sampleID,
marker ="PDL1",
filenameprefix="Tumor_PDL1",
height_size = 5,
width_size =18,
ncols=5) {
require(ggplot2); require(dplyr); require(pheatmap); require(scales);
data<- cbind(coord_data, expression_data[, marker])
colnames(data)[length(data)]<-marker # name the last column (added from expr data) -> marker name
data_filtered <- data[data$sample_id%in% uniqID, ]
pdf(paste0('./output/', filenameprefix, '_level.pdf'), height=height_size, width=width_size)
p1<-ggplot(data_filtered,aes(x=X_position, y=Y_position, color=get(marker))) +
geom_point(size=0.5) +
scale_color_distiller(palette = "Spectral", direction = -1)+
theme_minimal()+
theme(
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
)+
scale_y_reverse()+
facet_wrap(~sample_id, ncol=ncols)+
labs(color = marker)
print(p1)
dev.off()
data_filtered <- data_filtered %>%
group_by(sample_id) %>%
mutate(scaled = scales::rescale(get(marker), to = c(0, 1))) %>% # Scale to 0-1 within each group
ungroup()
pdf(paste0('./output/', filenameprefix, '_scaled.pdf'), height=height_size, width=width_size)
p2<- ggplot(data_filtered,aes(x=X_position, y=Y_position, color=scaled)) +
geom_point(size=0.5) +
scale_color_distiller(palette = "Spectral", direction = -1)+
theme_minimal()+
theme(
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
)+
facet_wrap(~sample_id, , ncol=ncols)+
labs(color = paste(marker, "scaled"))
print(p2)
dev.off()
}
plot_marker_level(coord_data = df_output[index, ],
expression_data= new_expr[index, ],
uniqID = select_sampID,
marker ="CK",
filenameprefix="Tumor_CK",
height_size = 5,
width_size = 18,
ncols=4)
source('./codes/functions/plot_marker_level.R')
head(df_joined)
pdf('./output/FigureS4A.pdf', height=3, width=4)
pS4A<- ggplot(merged_summary,
aes(x=type, y=PDL1, color=type)) +
geom_boxplot(alpha=0.5) +
geom_jitter(width=0.2, alpha=0.6, size=1)+
theme_bw()+
theme(strip.background = element_blank(),
strip.text = element_text(size = 15),
axis.text.x = element_text(angle=45, color="black", hjust=1),
plot.title = element_text(hjust = 0.5))+
facet_wrap(~Site) +
xlab("type")
print(pS4A)
dev.off()
